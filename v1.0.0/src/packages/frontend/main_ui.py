# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'main.ui'
#
# Created by: PyQt5 UI code generator 5.15.7
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.
from PyQt5.QtWidgets import *
from PyQt5 import QtCore, QtGui
from PyQt5.QtGui import *
from PyQt5 .QtCore import *
import sys
import os
from PyQt5.QtWidgets import QApplication
from PyQt5.QtCore import QFile, QTextStream
from PyQt5.QtCore import QThread, pyqtSignal
from PyQt5.QtWidgets import QMainWindow, QApplication
from PyQt5 import QtCore, QtGui, QtWidgets
from packages.backend.user_options.user_options import user_options
from packages.backend.user_options.option_one_driver import user_option_one_driver
from packages.backend.gpt_driver.gpt_driver import validate_api_key
from packages.frontend.classes.worker import Worker
from packages.frontend.classes.scroll_label import ScrollLabel
from packages.frontend.resources import resources_rc
from packages.backend.progress_tracker.global_instance import progress_tracker
from PyQt5.QtCore import pyqtSlot as pyQtSlot
from packages.backend.gpt_driver import gpt_driver
import qdarktheme
from packages.frontend.main_ui_functions import Ui_MainWindow_Functions

# =================================
# APP CLASS, which is a subclass of QMainWindow and Ui_MainWindow_Functions
class Ui_MainWindow(QtWidgets.QMainWindow, Ui_MainWindow_Functions):  # Make Ui_MainWindow inherit from QMainWindow
    def __init__(self, *args, **kwargs):
        super(Ui_MainWindow, self).__init__(*args, **kwargs)
        # self.setWindowIcon(QtGui.QIcon('icon.png'))
        self.setupUi(self)
        
        # PROGRESS BAR CONTENTS
        self.progress_tracker = progress_tracker
        self.progress_tracker.update_progress.connect(self.progressBar.setValue)
        self.worker = Worker()  # Initialize the worker object
        self.worker.taskFinished.connect(self.update_output)  # Connect taskFinished signal to a slot
        self.worker.update_progress_bar.connect(self.update_progress)
        
        
        self.api_key = ""
        self.api_key_entry_in_progress = False
        self.reset_button.clicked.connect(self.reset_button_clicked)  # Connect reset button to its handler
        self.reset_button.setEnabled(False)  # Disable reset button at start
        # self.worker.taskFailed.connect(self.handle_task_failed)  # connect the taskFailed signal to its handler
        self.worker.taskFinished.connect(self.handle_task_finished)
    
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(795, 600)
        icon = QtGui.QIcon()
        icon.addPixmap(QtGui.QPixmap(":/app_icon/icons/app_icon.svg"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        MainWindow.setWindowIcon(icon)
        
        # STYLE SHEET
        MainWindow.setStyleSheet("*{\n"
            "    background-color: #FFFFFF;  /* Global application background color is pure white */\n"
            "}\n"
            "\n"
            "QPushButton{\n"
            "    border-style: solid;\n"
            "    border-color: #050a0e;\n"
            "    border-width: 1px;\n"
            "    border-radius: 5px;\n"
            "    color: #d3dae3;\n"
            "    padding: 2px;\n"
            "    background-color: #100E19;\n"
            "}\n"
            "\n"
            "QPushButton::default{\n"
            "    border-style: solid;\n"
            "    border-color: #050a0e;\n"
            "    border-width: 1px;\n"
            "    border-radius: 5px;\n"
            "    color: #000000;  /* Default button text color is black */\n"
            "    padding: 2px;\n"
            "    background-color: #FFFFFF;  /* Default button background color is white */\n"
            "}\n"
            "\n"
            "QPushButton:hover {\n"
            "    border: 2px solid #000000;\n"
            "    border-radius: 5px;\n"
            "    background-color: #F0F0F0;  /* Slightly darker background color when hovered */\n"
            "    color: #000000;\n"
            "    text-align: center;\n"
            "    padding: 5px;\n"
            "}\n"
            "\n"
            "QPushButton:pressed{\n"
            "    border-width: 2px;\n"
            "    border-color: #000000;\n"
            "    border-radius: 5px;\n"
            "    background-color: #E5E5E5;  /* Even darker background color when pressed */\n"
            "    color: #000000;\n"
            "}\n"
            "\n"
            "QProgressBar{\n"
            "    border: 2px solid grey;\n"
            "    border-radius: 5px;\n"
            "    text-align: center;\n"
            "    color: grey;\n"
            "}\n"
            "\n"
            "QProgressBar::chunk {\n"
            "    background-color: black;\n"
            "}\n"
            "\n"
            "QScrollBar:vertical {\n"
            "    background: #FFFFFF;\n"
            "    width: 15px;\n"
            "    margin: 0px;\n"
            "}\n"
            "\n"
            "QScrollBar::handle:vertical {\n"
            "    background: #000000;\n"
            "}\n"
            "\n"
            "QScrollBar::add-line:vertical, QScrollBar::sub-line:vertical, QScrollBar::add-page:vertical, QScrollBar::sub-page:vertical {\n"
            "    width: 0px;\n"
            "    background: none;\n"
            "}\n"
            "")

        
        
        MainWindow.setIconSize(QtCore.QSize(256, 256))
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        
        # =================================
        # API BUTTON CONTENTS
        self.api_input_widget = QtWidgets.QWidget(self.centralwidget)
        self.api_input_widget.setGeometry(QtCore.QRect(0, 0, 461, 71))
        self.api_input_widget.setObjectName("api_input_widget")

        self.activate_button = QtWidgets.QPushButton(self.api_input_widget)
        self.activate_button.clicked.connect(self.activate_button_clicked)
        self.activate_button.setGeometry(QtCore.QRect(349, 30, 111, 31))

        font = QtGui.QFont()
        font.setFamily("Myanmar Text")
        font.setBold(True)
        font.setWeight(75)

        self.activate_button.setFont(font)
        self.activate_button.setObjectName("activate_button")

        self.api_key_input = QtWidgets.QLineEdit(self.api_input_widget)
        self.api_key_input.setGeometry(QtCore.QRect(10, 30, 330, 31))
        self.api_key_input.setAlignment(QtCore.Qt.AlignCenter)
        self.api_key_input.setObjectName("lineEdit")
        self.api_key_input.textChanged.connect(self.handle_text_changed)  # Connects to handle_text_changed method

        self.api_key_label= QtWidgets.QLabel(self.api_input_widget)
        self.api_key_label.setGeometry(QtCore.QRect(20, 10, 321, 16))

        font = QtGui.QFont()
        font.setBold(True)
        font.setWeight(75)

        self.api_key_label.setFont(font)
        self.api_key_label.setLayoutDirection(QtCore.Qt.LeftToRight)
        self.api_key_label.setAlignment(QtCore.Qt.AlignCenter)
        self.api_key_label.setObjectName("label")
        
        # =================================
        
        
        # =================================
        # Scroll Wheel Output Label
        self.output_widget = QtWidgets.QWidget(self.centralwidget)
        self.output_widget.setGeometry(QtCore.QRect(460, 0, 341, 601))
        self.output_widget.setObjectName("output_widget")
        self.output_label = ScrollLabel(self.output_widget)
        self.output_label.setGeometry(QtCore.QRect(10, 10, 321, 531))
        font = QtGui.QFont()
        font.setFamily("Yu Gothic Medium")
        font.setPointSize(12)
        self.output_label.setFont(font)
        self.output_label.setLayoutDirection(QtCore.Qt.LeftToRight)
        self.output_label.setFrameShape(QtWidgets.QFrame.Box)
        self.output_label.setFrameShadow(QtWidgets.QFrame.Plain)
        self.output_label.setAlignment(QtCore.Qt.AlignHCenter)
        self.output_label.setLineWidth(2)
        self.output_label.setTextInteractionFlags(QtCore.Qt.LinksAccessibleByMouse|QtCore.Qt.TextSelectableByMouse)
        self.output_label.setAlignment(QtCore.Qt.AlignHCenter|QtCore.Qt.AlignTop)
        # =================================
        
        # =================================
        # USER OPTIONS CONTENTS
        self.option_picker_widget = QtWidgets.QWidget(self.centralwidget)
        self.option_picker_widget.setGeometry(QtCore.QRect(0, 70, 461, 531))
        self.option_picker_widget.setObjectName("option_picker_widget")
        self.option_picker_widget.hide() # Hide at start to avoid error
        self.option_1 = QtWidgets.QPushButton(self.option_picker_widget, clicked = lambda:self.press_it(1))
        self.option_1.setGeometry(QtCore.QRect(20, 20, 421, 41))
        self.option_1.setObjectName("option_1")
        MainWindow.setCentralWidget(self.centralwidget)
        # =================================
        
        # =================================
        # PROGRESS BAR
        self.progress_widget = QtWidgets.QWidget(self.centralwidget)
        self.progress_widget.setGeometry(QtCore.QRect(0, 540, 461, 61))
        self.progress_widget.setObjectName("progress_widget")
        self.progressBar = QtWidgets.QProgressBar(self.progress_widget)
        self.progressBar.setGeometry(QtCore.QRect(10, 20, 441, 23))
        self.progressBar.setProperty("value", 0)
        self.progressBar.setOrientation(QtCore.Qt.Horizontal)
        self.progressBar.setInvertedAppearance(False)
        self.progressBar.setObjectName("progressBar")
        
        # Set the maximum value of the progress bar
        self.progressBar.setMaximum(25)
        
        MainWindow.setCentralWidget(self.centralwidget)
        # =================================
        
        # =================================
        # RESET BUTTON
        self.reset_button = QtWidgets.QPushButton(self.output_widget)
        self.reset_button.setGeometry(QtCore.QRect(10, 560, 321, 28))
        self.reset_button.setObjectName("reset_button")
        # =================================

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "Stock Contender"))
        self.activate_button.setText(_translate("MainWindow", "Activate"))
        self.api_key_label.setText(_translate("MainWindow", "Enter your open AI API KEY below"))
        self.output_label.setText(_translate("MainWindow", "Welcome To Stock Contender!"))
        self.option_1.setText(_translate("MainWindow", "Option 1: Retreive top 3 picks of the day"))
        self.reset_button.setText(_translate("MainWindow", "Reset and Clear"))
    
    
   
    
# END OF APP CLASS
# =================================
    
def init_window():
    app = QApplication(sys.argv)
    MainWindow = Ui_MainWindow()
    MainWindow.show()
    sys.exit(app.exec_())
